async function fetchDesigns(){const{data:e,error:t}=await supabase.from("user_files").select("id, design_name, name, custom_name, design_metadata, created_at, short_code, order_placed");return t?(console.error("Error fetching designs:",t),[]):e.filter(e=>null!==e.design_name)}function createDesignCard(e){const t=`${SUPABASE_URL}/storage/v1/object/public/public-bucket/${e.name}`,n=e.custom_name||e.design_name,r=document.createElement("div");r.className="design-card",r.dataset.designMetadata=JSON.stringify(e.design_metadata),r.innerHTML=`\n        <div class="design-header" data-design-id="${e.id}" data-short-code="${e.short_code}">\n            <h3 class="design-title" id="page-title" data-original-name="${n}">${n}</h3>\n            <button class="menu-button" aria-label="More options">\n                <svg width="4" height="16" viewBox="0 0 4 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n                    <circle cx="2" cy="2" r="2" fill="currentColor"/>\n                    <circle cx="2" cy="8" r="2" fill="currentColor"/>\n                    <circle cx="2" cy="14" r="2" fill="currentColor"/>\n                </svg>\n            </button>\n            <div class="design-menu" style="display: none;">\n                <button class="menu-item rename-button">\n                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                    </svg>\n                    Rename\n                </button>\n                <button class="menu-item share-button">\n                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 9.316a3 3 0 105.368-2.684 3 3 0 00-5.368 2.684zm0-9.316a3 3 0 105.366-2.683 3 3 0 00-5.366 2.683z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                    </svg>\n                    Share\n                </button>\n                <button class="menu-item delete-button">\n                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                    </svg>\n                    Delete\n                </button>\n            </div>\n        </div>\n        <div class="design-preview">\n            <img src="${t}" alt="${n} Preview" />\n        </div>\n        <div class="design-footer">\n            <span class="creation-date" id="creation-date">Created on: ${new Date(e.created_at).toLocaleDateString()}</span>\n        </div>\n    `;const o=r.querySelector(".design-title");return o.contentEditable=!1,o.classList.remove("renaming"),r}async function renderDesigns(){const e=await fetchDesigns();e.sort((e,t)=>new Date(t.created_at)-new Date(e.created_at));const t=document.querySelector(".designs-grid");t.innerHTML="",e.forEach(e=>{const n=createDesignCard(e);n.addEventListener("click",t=>{const r=n.querySelector(".design-title.renaming");t.target.closest(".menu-button")||t.target.closest(".design-menu")||r||openDesign(e.short_code)}),t.appendChild(n)}),document.querySelectorAll(".menu-button").forEach(e=>{e.addEventListener("click",toggleMenu)}),document.querySelectorAll(".rename-button").forEach(e=>{e.addEventListener("click",e=>{e.stopPropagation();const t=e.target.closest(".design-card"),n=t.querySelector(".design-title");n.contentEditable=!0,n.classList.add("renaming"),n.focus()})}),document.querySelectorAll(".share-button").forEach(e=>{e.addEventListener("click",e=>{e.stopPropagation(),shareDesign(e)})}),document.querySelectorAll(".delete-button").forEach(e=>{e.addEventListener("click",e=>{e.stopPropagation(),deleteDesign(e)})}),document.querySelectorAll(".design-title").forEach(e=>{e.addEventListener("keydown",t=>{"Enter"===t.key&&(t.preventDefault(),e.blur())}),e.addEventListener("blur",()=>{e.contentEditable=!1,e.classList.remove("renaming");const t=e.closest(".design-header").dataset.designId;renameDesign(t,e.textContent)})}),document.addEventListener("click",e=>{e.target.closest(".design-card")||closeAllMenus()})}function closeAllMenus(){document.querySelectorAll(".design-menu").forEach(e=>{e.style.display="none"}),document.querySelectorAll(".design-title").forEach(e=>{e.contentEditable=!1,e.classList.remove("renaming")})}function toggleMenu(e){e.stopPropagation();const t=e.target.closest(".design-header").querySelector(".design-menu"),n="block"===t.style.display;closeAllMenus(),n||(t.style.display="block")}async function renameDesign(e,t){const{data:n,error:r}=await supabase.from("user_files").select("order_placed").eq("id",e).single();if(r)return void console.error("Error fetching design data:",r);if(n.order_placed>0){window.translatedAlert("design_ordered_no_rename");const t=document.querySelector(`[data-design-id="${e}"] .design-title`);return void(t.textContent=t.getAttribute("data-original-name"))}const{data:o,error:s}=await supabase.from("user_files").update({custom_name:t}).eq("id",e);if(s){console.error("Error renaming design:",s);const t=document.querySelector(`[data-design-id="${e}"] .design-title`);t.textContent=t.getAttribute("data-original-name")}else{console.log("Design renamed successfully");const n=document.querySelector(`[data-design-id="${e}"] .design-title`);n.setAttribute("data-original-name",t)}}function shareDesign(e){const t=e.target.closest(".design-card"),n=t.querySelector(".design-title").textContent,r=t.dataset.designMetadata;let o;try{o=JSON.parse(r)}catch(e){return console.error("Error parsing design metadata:",e),void window.translatedAlert("error_sharing_design")}if(!o)return console.error("Design metadata is missing"),void window.translatedAlert("unable_to_share_missing_data");const s=new URLSearchParams;s.append("name",n),s.append("metadata",JSON.stringify(o));const a=`${window.location.origin}/share.html?${s.toString()}`;navigator.clipboard.writeText(a).then(()=>window.translatedAlert("share_url_copied")).catch(e=>{console.error("Error copying URL: ",e),window.translatedAlert("failed_to_copy_share_url")})}async function deleteDesign(e){const t=e.target.closest(".design-card"),n=t.querySelector(".design-header").dataset.designId,r=t.querySelector(".design-title").textContent,{data:o,error:s}=await supabase.from("user_files").select("order_placed, name").eq("id",n).single();if(s)return void console.error("Error fetching design data:",s);if(o.order_placed>0)return void window.translatedAlert("design_ordered_no_delete");const a=await confirm(`Are you sure you want to delete "${r}"?`);if(a)try{const{error:e}=await supabase.storage.from("public-bucket").remove([o.name]);if(e)throw e;const{error:r}=await supabase.from("user_files").delete().eq("id",n);if(r)throw r;t.remove(),console.log("Design deleted successfully")}catch(e){console.error("Error deleting design:",e),window.translatedAlert("error_deleting_design")}}function openDesign(e){const t=`${window.location.origin}/index.html?=${e}`;window.open(t,"_self")}document.addEventListener("DOMContentLoaded",renderDesigns);